buildscript {

    repositories {
        jcenter()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${rootProject.ext.kotlin}"
        classpath "org.jetbrains.kotlin:kotlin-android-extensions:${rootProject.ext.kotlin}"
        classpath "io.realm:realm-gradle-plugin:$rootProject.ext.realm"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'realm-android'


android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"

    defaultConfig {
        applicationId "com.tudorluca.sandbox"
        minSdkVersion 21
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"

        buildConfigField "String", "GIT_SHA", "\"${gitSha()}\""
        buildConfigField "String", "BUILD_TIME", "\"${buildTime()}\""

        multiDexEnabled true
    }

    dexOptions {
        javaMaxHeapSize rootProject.ext.heapSize
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        named {
        }
    }

    // If you need to add more flavors, consider using flavor dimensions.
    productFlavors {
        mock {
            applicationIdSuffix = ".mock"
        }
        prod {
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def newName = output.outputFile.name.replace(".apk", "-${variant.versionName}.apk") as String
            output.outputFile = new File(output.outputFile.parent as File, newName)
        }
    }

    dataBinding {
        enabled = true
    }
}

repositories {
    jcenter()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "org.jetbrains.kotlin:kotlin-stdlib:${rootProject.ext.kotlin}"

    compile "com.android.support:multidex:$rootProject.ext.multidex"
    compile "com.android.support:support-v4:$rootProject.ext.supportLibrary"
    compile "com.android.support:appcompat-v7:$rootProject.ext.supportLibrary"
    compile "com.android.support:design:$rootProject.ext.supportLibrary"
    compile "com.android.support:cardview-v7:$rootProject.ext.supportLibrary"
    compile "com.android.support:recyclerview-v7:$rootProject.ext.supportLibrary"
    compile "com.android.support:percent:$rootProject.ext.supportLibrary"
    compile "com.google.android.gms:play-services-base:$rootProject.ext.playServices"
    compile "net.grandcentrix.tray:tray:$rootProject.ext.tray"
    compile "com.squareup.retrofit2:retrofit:$rootProject.ext.retrofit"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.ext.retrofit"
    compile "com.squareup.retrofit2:adapter-rxjava:$rootProject.ext.retrofit"
    compile "com.squareup.okhttp3:logging-interceptor:$rootProject.ext.okHttp"
    compile "com.facebook.stetho:stetho:$rootProject.ext.stetho"
    compile "com.facebook.stetho:stetho-okhttp3:$rootProject.ext.stetho"
    compile "com.facebook.stetho:stetho-js-rhino:$rootProject.ext.stetho"
    compile "io.reactivex:rxjava:$rootProject.ext.rxJava"
    compile "io.reactivex:rxandroid:$rootProject.ext.rxAndroid"
    compile "com.github.bumptech.glide:glide:$rootProject.ext.glide"
    compile "com.jakewharton:disklrucache:$rootProject.ext.diskCache"
    compile "com.jakewharton.threetenabp:threetenabp:$rootProject.ext.threeTen"
    compile "com.jakewharton.timber:timber:$rootProject.ext.timber"
    compile "com.jakewharton.rxbinding:rxbinding:$rootProject.ext.rxBinding"
    compile "com.google.guava:guava:$rootProject.ext.guava"

    testCompile "junit:junit:$rootProject.ext.junit"
    testCompile "com.squareup.okhttp3:mockwebserver:$rootProject.ext.okHttp"

    retrolambdaConfig "net.orfjackal.retrolambda:retrolambda:$rootProject.ext.retrolambda"
}
